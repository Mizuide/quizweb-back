{"version":3,"sources":["hooks/useFetchQuizDetails.ts","component/FinalResult.tsx","const/answerStatus.ts","component/Choices.tsx","hooks/useFetchAnswer.ts","img/correct.png","img/incorrect.png","img/waiting.gif","component/Result.tsx","component/Questions.tsx","component/QuizDescription.tsx","component/QuizScreen.tsx","component/LinkToQuiz.tsx","hooks/useIndex.tsx","hooks/useFetchQuizes.ts","component/Pager.tsx","component/Index.tsx","const/category.ts","const/order.ts","component/Categories.tsx","component/OrderList.tsx","component/WhereTitle.tsx","component/SearchConditions.tsx","component/QuizIndex.tsx","component/createQuiz/CreateChoiceField.tsx","hooks/useChangeQuizContext.ts","component/createQuiz/CreateChoiceForm.tsx","component/createQuiz/CreateQuestionField.tsx","component/createQuiz/CreateQuestionForm.tsx","component/createQuiz/CreateQuizForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useFetchQuizDetail","useState","quizDetail","setQuizDetail","param","axios","get","params","fetchQuizDetail","then","res","data","FinalResult","prop","useEffect","post","numOfCorrect","quiz","id","className","questions","length","answerStatus","Choices","choices","undefined","correctAnswer","answer","forEach","choice","index","push","useContext","answerStatusContext","setAnswerStatus","onClick","answerStatusConst","setAnswer","selectionNo","content","key","Choice","correct","ChoiceResult","useFetchAnswer","Result","displayImg","displayAttr","alt","src","waitingImg","correctImg","incorrectImg","commentDisplay","display","style","comment","Question","fetchAnswer","questionId","question","selectiionNo","React","createContext","console","log","Questions","maxSize","currentNum","setCurrentNum","countupNumOfCorrect","QuestionArray","q","setComplete","Provider","value","QuizDescription","description","thumbnail","onClickStart","QuizScreen","fetchQuizDetailParam","quizId","useParams","screen","setScreen","setNumOfCorrect","correctRef","useRef","current","finishFlg","setFinishFlg","LinkToQuiz","to","title","useIndex","displayNum","setIndex","quizes","page","disp","map","slice","filter","l","useFetchQuizes","setQuizes","lastQuiz","concat","newQuizes","Panel","disable","Pager","setPage","maxFlg","Index","categoryId","categoryList","name","img","orderId","orderList","Category","setCategory","category","Categories","categories","keyCount","categoryConst","categoryElement","OrderList","Order","setOrder","order","count","orderConst","orderElement","WhereTitle","type","onChange","e","setWhereTitle","target","SearchConditions","wheretitle","setConditions","conditions","QuizIndex","setFetchQuiz","initialSearchConditions","searchConditions","setSearchConditions","initialFetchParan","fetchParam","CreateChoiceField","setContent","changeChoice","quesitonIndex","QuizInfoContext","setQuiz","questionArrayRef","ownerQuestion","find","indexId","Error","newContent","c","useChangeChoice","questionIndex","choiceIndex","placeholder","CreateChoiceForm","nextIndex","setNextIndex","addChoicesZone","setAddChoicesZone","changeCorrect","targetChoices","correctFlg","useChangeCorrectChoice","addChoiceToContext","useAddChoice","deleteChoise","useDeleteChoice","addChoicesZoneRef","addChoice","document","querySelectorAll","parentElement","changeCheckValue","element","CreateQuestionField","setComment","changeQuestion","newComment","useChangeQuestion","CreateQuestionForm","addQuestionsZone","setAddQuestionsZone","deleteQuestion","useDeleteQuestion","addQuestionToContext","useAddQuestion","addQuestionsZoneRef","addQuestion","CreateQuizForm","setTitle","setDescription","disabled","createQuizParam","history","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3afc95fc.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { useState } from \"react\";\nimport fetchQuizDetailsParam from \"../type/fetchQuizDetailParam\";\nimport quizDetail from '../type/quizDetail';\n\nconst QUIZ_DETAIL_URL: string = \"/quizWeb/quizDetail\";\n\nfunction fetchQuizDetail(param: fetchQuizDetailsParam): Promise<AxiosResponse<quizDetail>> {\n    return axios.get<quizDetail>(QUIZ_DETAIL_URL, { params: param });\n}\n\nconst useFetchQuizDetail: () => [quizDetail|undefined, (param: fetchQuizDetailsParam) => void] = () => {\n    const [quizDetail, setQuizDetail] = useState<quizDetail>();\n    const setFetchQuizDetail = (param: fetchQuizDetailsParam) => {\n        \n        fetchQuizDetail(param).then(res => setQuizDetail(res.data));\n    }\n        return [quizDetail, setFetchQuizDetail];\n}\n\nexport default useFetchQuizDetail;","import quizDetail from \"../type/quizDetail\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\n\ntype prop = {\n  numOfCorrect:number;\n  quiz:quizDetail;\n}\n\nconst AVARAGE_URL = \"/quizWeb/avarage\";\n\nconst FinalResult: React.FC<prop> = (prop: prop) => {\n    useEffect(() => {axios.post(AVARAGE_URL,{\"correct\":prop.numOfCorrect,\"quizId\":prop.quiz.id})},[])\n  return(\n    <div className='finalResult'>\n        あなたの正解数は・・・\n        {`${prop.quiz.questions.length}問中${prop.numOfCorrect}問正解でした！`}\n    </div>\n  )\n}\n\nexport default FinalResult;","export const answerStatus = {none:'none',waiting:'waiting',correct:'correct',incorrect:'incorrect'} as const;\nexport type answerStatus =typeof answerStatus[keyof typeof answerStatus]; //valueのリテラル値を取る、keyと同一名称のためkeyofでも問題なし\n","import React, { ReactElement, useContext, useState } from \"react\";\nimport { choice } from '../type/quizDetail'\nimport {answerStatusContext} from './Questions'\nimport * as answerStatusConst from \"../const/answerStatus\";\n\ntype choiceProp = {\n    key: number;\n    choice: choice;\n    // answerState: [number | undefined, (no: number) => void];\n    answer: number|undefined;\n    setAnswer: (no: number) => void;\n}\n\n\nconst Choice: React.FC<choiceProp> = (prop: choiceProp) => {\n\n    const [answerStatus, setAnswerStatus] = useContext(answerStatusContext);\n    // const [answer, setAnswer] = prop.answerState;\n    return (\n        <div className='choice' key={prop.key} onClick={() => {\n            setAnswerStatus(answerStatusConst.answerStatus.waiting);\n            if (prop.answer === undefined) {\n                prop.setAnswer(prop.choice.selectionNo);\n            }\n        }\n        }>\n            {prop.choice.content}\n        </div>\n    )\n}\n\n\ntype choiceResultProp = {\n    key: number,\n    choice: choice;\n    answer: boolean;\n    correct: boolean;\n}\n\n\nconst ChoiceResult: React.FC<choiceResultProp> = (prop: choiceResultProp) => {\n    let className: string = 'none';\n\n    if (prop.answer && prop.correct) {\n        className = 'success';\n    } else if (prop.answer && !prop.correct) {\n        className = 'faile';\n    } else if (!prop.answer && prop.correct) {\n        className = \"correctAnswer\";\n    }\n\n    return (\n        <div key={prop.key} className={`choice ${className}`} >\n            {prop.choice.content}\n        </div>\n    )\n}\n\ninterface Choices extends ReactElement { }\n\ntype prop = {\n    choices: choice[];\n    // answerState: [number | undefined, (no: number) => void];\n    answer: number | undefined;\n    setAnswer: (no: number) => void;\n    correctAnswer: number | undefined;\n}\n\nconst Choices: React.FC<prop> = (prop: prop) => {\n    let choices: (ReactElement | null)[] = [];\n    // const [answer, setAnswer] = prop.answerState;\n    if (prop.correctAnswer === undefined || prop.answer === undefined) {\n        prop.choices.forEach((choice, index) => {\n            choices.push(Choice({ key: index, choice: choice, answer: prop.answer, setAnswer: prop.setAnswer }));\n        });\n    } else {\n        prop.choices.forEach((choice, index) => {\n            choices.push(ChoiceResult({ key: index, choice: choice, answer: choice.selectionNo === prop.answer, correct: choice.selectionNo === prop.correctAnswer }));\n        });\n    }\n\n    return (<div className='choices'>\n        {choices}\n        </div>);\n\n}\n\n\n\nexport default Choices;","import axios, { AxiosResponse } from 'axios';\nimport { useState } from \"react\";\nimport fetchAnswerParam from \"../type/fetchAnswerParam\";\n\nconst ANSWER_URL: string = \"/quizWeb/answer\";\nconst useFetchAnswer: () => [number | undefined, (param: fetchAnswerParam) => void] = () => {\n    const [answer, setAnswer] = useState<number>();\n\n    const setFetchAnswer = (param: fetchAnswerParam) => {\n        axios.post<number>(ANSWER_URL, { ...param }).then(res => setAnswer(res.data));;\n    }\n\n    return [answer, setFetchAnswer];\n}\n\nexport default useFetchAnswer;\n","export default __webpack_public_path__ + \"static/media/correct.7fe1bc84.png\";","export default __webpack_public_path__ + \"static/media/incorrect.e1cc9809.png\";","export default __webpack_public_path__ + \"static/media/waiting.3d89aabb.gif\";","import { ReactElement } from \"react\";\nimport correctImg from '../img/correct.png';\nimport incorrectImg from '../img/incorrect.png';\nimport waitingImg from '../img/waiting.gif';\n\nimport { answerStatus } from '../const/answerStatus'\n\ninterface Result extends ReactElement { }\n\ntype prop = {\n    answerStatus: answerStatus;\n    comment: string;\n}\nconst Result: React.FC<prop> = (prop: prop): Result => {\n    let displayAttr: 'inline' | 'none' = 'inline';\n    let displayImg;\n    switch (prop.answerStatus) {\n        case answerStatus.none:\n            displayAttr = \"none\";\n            break;            \n        case answerStatus.waiting:\n            displayImg = (<img alt='読み込み中' src={waitingImg} />);\n            displayAttr = \"none\";\n            break;\n        case answerStatus.correct:\n            displayImg = (<img alt='正解' src={correctImg} />);\n            break;\n        case answerStatus.incorrect:\n            displayImg = (<img alt='不正解'　src={incorrectImg} />);\n            break;\n    }\n\n    const commentDisplay: React.CSSProperties = {\n        display: displayAttr,\n    };\n    \n    return (\n        <div className='Result'>\n            {displayImg}\n            <div className='comment' style={commentDisplay}>{prop.comment}</div>\n        </div>\n    )\n}\n\nexport default Result;","import React, { ReactElement, useContext, useEffect, useState } from \"react\";\nimport * as answerStatusConst from \"../const/answerStatus\";\nimport { question } from '../type/quizDetail'\nimport Choices from \"./Choices\";\nimport fetchAnswerParam from \"../type/fetchAnswerParam\";\nimport useFetchAnswer from \"../hooks/useFetchAnswer\";\nimport Result from \"./Result\";\n\ntype questionProp = {\n    key:number;\n    question: question;\n}\n\nconst Question: React.FC<questionProp> = (prop: questionProp) => {\n    const [answerStatus, setAnswerStatus] = useContext(answerStatusContext);\n\n    const [answer, setAnswer] = useState<number>();\n    const [correctAnswer, fetchAnswer] = useFetchAnswer();\n\n    //fetch correctAnswer after select choice \n    useEffect(() => {\n        if (answer !== undefined) {\n            let param: fetchAnswerParam = {\n                questionId: prop.question.id,\n                selectiionNo: answer\n            };\n            fetchAnswer(param);\n            // setAnswerStatus(answerStatusConst.answerStatus.waiting);\n        }\n    }, [answer])\n\n    //judge answer\n    useEffect(() => {\n        if (correctAnswer !== undefined) {\n            if (correctAnswer === answer) {\n                setAnswerStatus(answerStatusConst.answerStatus.correct);\n            } else {\n                setAnswerStatus(answerStatusConst.answerStatus.incorrect);\n            }\n        }\n    }, [correctAnswer])\n    \n    return (\n        <div >\n            <div className='content'>{prop.question.content} </div>\n            <Choices choices={prop.question.choices} answer={answer} setAnswer={setAnswer}\n                correctAnswer={correctAnswer} />\n            <Result comment={prop.question.comment} answerStatus={answerStatus} />\n        </div>\n    );\n}\n\ntype prop = {\n    questions: question[];\n    countupNumOfCorrect:() => void; \n    setComplete:() => void;\n}\n\nexport const answerStatusContext =\n    React.createContext<[answerStatusConst.answerStatus, (answerStatus: answerStatusConst.answerStatus) => void]>\n        ([answerStatusConst.answerStatus.none, (answerStatus: answerStatusConst.answerStatus) => console.log('notDefined')]);\n\nconst Questions: React.FC<prop> = (prop: prop) => {\n    const maxSize: number = prop.questions.length;\n\n    const [answerStatus, setAnswerStatus] = useState<answerStatusConst.answerStatus>(answerStatusConst.answerStatus.none);\n    const [currentNum, setCurrentNum] = useState<number>(0);\n\n    useEffect(() =>{\n        if(answerStatus === answerStatusConst.answerStatus.correct){\n            prop.countupNumOfCorrect();\n        }\n    },[answerStatus])\n\n    //if user answer,display next question \n    const onClick = () => {\n        if (answerStatus === answerStatusConst.answerStatus.none || answerStatus === answerStatusConst.answerStatus.waiting) {\n            return false;\n        } else if(currentNum + 1 < maxSize ){\n            setCurrentNum(currentNum + 1);\n            setAnswerStatus(answerStatusConst.answerStatus.none);\n        }else if(currentNum + 1 === maxSize){\n            prop.setComplete();\n        }\n    }\n    const QuestionArray: ReactElement[] = [];\n    prop.questions.forEach((q,index) => QuestionArray.push(<Question question={q} key={index}/>));\n    return (\n        <div className='questions' onClick={onClick}>\n            <div className='header'>\n                {`第${currentNum + 1}問`}\n            </div>\n            <answerStatusContext.Provider value={[answerStatus, setAnswerStatus]}>\n                {QuestionArray[currentNum]}\n            </answerStatusContext.Provider>\n        </div>\n    );\n}\n\nexport default Questions;","import { ReactElement} from \"react\";\nimport quizDetail from '../type/quizDetail'\n\ninterface QuizDescription extends ReactElement { }\n\ntype prop = {\n  quizDetail:quizDetail;\n  onClickStart:() => void\n}\n\nconst QuizDescription: React.FC<prop> = (prop: prop): QuizDescription => {\n  return(\n    <div className='quizDescription'>\n        <div className='desCription'>\n            {prop.quizDetail.description}\n        </div>\n        <img src={prop.quizDetail.thumbnail}/>\n        <div className='startButton' onClick={prop.onClickStart}>スタート！</div>\n    </div>\n  )\n}\n\nexport default QuizDescription;","import React, { ReactElement, useState, useEffect, useRef } from \"react\";\r\nimport { useParams } from 'react-router-dom'\r\nimport useFetchQuizDetail from '../hooks/useFetchQuizDetails'\r\nimport fetchQuizDetailParam from '../type/fetchQuizDetailParam'\r\nimport FinalResult from \"./FinalResult\";\r\nimport Questions from \"./Questions\";\r\nimport QuizDescription from \"./QuizDescription\";\r\n\r\n\r\nexport type routerParam = {\r\n    id: string\r\n}\r\n\r\nconst QuizScreen: React.FC = () => {\r\n    //this componet call from react-router\r\n    const prop: routerParam = useParams<routerParam>();\r\n    const fetchQuizDetailParam: fetchQuizDetailParam = {\r\n        quizId: prop.id\r\n    };\r\n\r\n    const [quizDetail, setQuizDetail] = useFetchQuizDetail();\r\n    const [screen, setScreen] = useState<ReactElement>();\r\n\r\n\r\n    const [numOfCorrect, setNumOfCorrect] = useState<number>(0);\r\n    let correctRef = useRef<number>();\r\n    correctRef.current = numOfCorrect;\r\n\r\n    const [finishFlg, setFinishFlg] = useState<boolean>(false);\r\n\r\n    useEffect(() => { setQuizDetail(fetchQuizDetailParam) }, [])\r\n    useEffect(() => {\r\n        if (quizDetail !== undefined) {\r\n            setScreen(<QuizDescription quizDetail={quizDetail} onClickStart={() =>\r\n                setScreen(<Questions questions={quizDetail.questions}\r\n                    countupNumOfCorrect={() => {\r\n                        if (correctRef.current !== undefined) {\r\n                            setNumOfCorrect(correctRef.current + 1)\r\n                        }\r\n                    }} setComplete={() => setFinishFlg(true)} />)} />)\r\n        }\r\n    }, [quizDetail])\r\n\r\n    useEffect(() => {\r\n        if (finishFlg && quizDetail !== undefined) {\r\n            setScreen(<FinalResult numOfCorrect={numOfCorrect} quiz={quizDetail} />);\r\n        }\r\n    }, [finishFlg]);\r\n\r\n    return (\r\n        <div className=\"quizScreen\">\r\n            {screen}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuizScreen;","import { ReactElement } from \"react\";\nimport { Link } from 'react-router-dom'\nimport quiz from '../type/quiz'\n\ninterface LinkToQuiz extends ReactElement { }\n\ntype prop = {\n  quiz: quiz\n}\n\nconst LinkToQuiz: React.FC<prop> = (prop: prop): LinkToQuiz => {\n  return (\n    <Link to={'/game/' + prop.quiz.id} key={prop.quiz.id}>\n      <div>\n        <div className='title'>\n          {prop.quiz.title}\n        </div>\n        <div className='description'>\n          {prop.quiz.description}\n        </div>\n        <div className='thumbnail'>\n          <img src={prop.quiz.thumbnail} />\n        </div>\n      </div>\n    </Link>\n  )\n}\n\nexport default LinkToQuiz;","import { ReactElement,  useState } from \"react\";\nimport LinkToQuiz from \"../component/LinkToQuiz\";\nimport quiz from \"../type/quiz\";\n\n/**\n * \n * displaynum...1ページに表示される件数\n * \n * index...LinkToQuizの配列\n * setDisplay...quiz配列から対応するページ数の分だけ切り出し、indexにセットする\n */\nconst useIndex = function (displayNum: number): [LinkToQuiz[] | null, (quizes: quiz[], page: number) => void] {\n    const [index, setIndex] = useState<(ReactElement)[] | null>(null);\n    const setDisplay = function (quizes: quiz[], page: number) {\n        \n            let links: (LinkToQuiz | null)[] = quizes.map((q) => LinkToQuiz({quiz:q}));\n            let disp = links.slice((page - 1) * displayNum, page * displayNum);\n            setIndex(disp.filter((l): l is LinkToQuiz => l !== null));\n        }\n    return [index, setDisplay];\n}\n\nexport default useIndex;","import axios, { AxiosResponse } from 'axios';\nimport { useState } from \"react\";\nimport quiz from \"../type/quiz\";\nimport fetchQuizParam from \"../type/fetchQuizParam\";\n\nconst QUIZ_URL: string = \"/quizWeb/quiz/get\";\n\nfunction fetchQuizes(param: fetchQuizParam): Promise<AxiosResponse<quiz[]>> {\n    return axios.post<quiz[]>(QUIZ_URL, { ...param });\n\n}\n\nconst useFetchQuizes: () => [quiz[], (prop: fetchQuizParam) => void] = () => {\n    const [quizes, setQuizes] = useState<quiz[]>([]);\n    const setFetchQuiz = function (prop: fetchQuizParam) {\n        fetchQuizes(prop).\n            then(res => {\n                if (prop.lastQuiz === null) {\n                    return res.data;\n                } else {\n                    return quizes.concat(res.data);\n                }\n            }).then(newQuizes => setQuizes(newQuizes));\n    }\n\n    return [quizes, setFetchQuiz];\n}\n\nexport default useFetchQuizes;","\ntype panelProp = {\n   display: string;\n   onClick: () => void;\n   disable: boolean;\n}\n\nconst Panel: React.FC<panelProp> = (prop) => {\n   return (<div className={`panel disable ${prop.disable}`} onClick={prop.disable ? () => false : prop.onClick} >{prop.display}</div>)\n}\n\ntype prop = {\n   page: number;\n   maxFlg: boolean;\n   setPage: (number: number) => void\n}\n\nconst Pager: React.FC<prop> = (prop) => {\n\n\n\n   return (<div className='pager'>\n      <Panel display={'next'} onClick={() => prop.setPage(prop.page + 1)} disable={prop.maxFlg} />\n      <div className='current_page'>{prop.page}</div>\n      <Panel display={'prev'} onClick={() => prop.setPage(prop.page - 1)} disable={prop.page <= 1} />\n   </div>);\n}\n\nexport default Pager;","import LinkToQuiz from \"./LinkToQuiz\";\nimport waitingImg from '../img/waiting.gif';\n\ntype prop = {\n    display: LinkToQuiz[] | null\n}\n\nconst Index: React.FC<prop> = (prop: prop) => {\n    if (prop.display === null ||prop.display.length===0) {\n        return (<nav className='index' ><img alt='読み込み中' src={waitingImg} /></nav>)\n    } else {\n        return (<nav className='index' >{prop.display}</nav>)\n    }\n}\n\nexport default Index;","export const categoryId = {all:'all',anime:'anime',movie:'movie',music:'music',target:'tarent',trivia:'trivia',study:'study',other:'other'} as const;\nexport type categoryId =typeof categoryId[keyof typeof categoryId]; //valueのリテラル値を取る、keyと同一名称のためkeyofでも問題なし\n\nexport type category = {\n    id:categoryId;\n    name:string;\n    img:string;\n}\n\nexport const categoryList: readonly category[] = [\n    { id: 'all', name: '全て', img: '' },\n    { id: 'anime', name: 'アニメ・漫画', img: '' },\n    { id: 'movie', name: '小説・映画', img: '' },\n    { id: 'music', name: '音楽', img: '' },\n    { id: 'tarent', name: '芸能・芸能人', img: '' },\n    { id: 'trivia', name: '知識・雑学', img: '' },\n    { id: 'study', name: '学習', img: '' },\n    { id: 'other', name: 'その他', img: '' },\n] as const;\n","export const orderId = {newOrder:'newOrder',oldOrder:'oldOrder',viewOrder:'viewOrder'} as const;\nexport type orderId =typeof orderId[keyof typeof orderId]; //valueのリテラル値を取る、keyと同一名称のためkeyofでも問題なし\n\nexport type order = {\n    id:orderId;\n    name:string;\n}\n\nexport const orderList: readonly order[] = [\n    { id: 'newOrder', name: '新着順' },\n    { id: 'oldOrder', name: '古い順' },\n    { id: 'viewOrder', name: '閲覧数順'},\n] as const;\n","import { ReactElement } from 'react';\nimport * as categoryConst from '../const/category'\n\ninterface Categories extends ReactElement{}\n\ntype CategotyProp = {\n    key:number,\n    category:categoryConst.category,\n    setCategory: (id:categoryConst.categoryId) => void\n}\n\nconst Category:React.FC<CategotyProp> = (prop: CategotyProp) => {\n   return (<div className='category' key={prop.key} onClick={() => { prop.setCategory(prop.category.id) }}>\n        <div className='name'>\n            {prop.category.name}\n        </div>\n        <div className='img'>\n            <img src={prop.category.img} />\n        </div>\n    </div>)\n}\n\ntype prop = {\n        setCategory: (id:categoryConst.categoryId) => void\n}\n\nconst Categories:React.FC<prop> = (prop: prop) => {\n\n    let categories:ReactElement[] = [];\n    let keyCount = 0\n    for (let category of categoryConst.categoryList) {\n        let categoryElement = Category({key:keyCount,category: category, setCategory: prop.setCategory })\n        if(categoryElement !== null){\n            categories.push(categoryElement);\n        }\n        keyCount++;\n    }\n\n    return(<div className='categories'>{categories}</div>)\n}\n\nexport default Categories;","import { ReactElement } from \"react\";\nimport * as orderConst from \"../const/order\";\n\ninterface OrderList extends ReactElement { }\n\ntype prop = {\n    setOrder: (id:orderConst.orderId) => void\n}\n\nconst OrderList: React.FC<prop> = (prop: prop) => {\n    type orderProp = {\n        order: orderConst.order;\n        setOrder: (id: orderConst.orderId) => void;\n        key: number;\n    }\n\n    const Order: React.FC<orderProp> = (prop: orderProp) => {\n        return (<div className='order' key={prop.key} onClick={() => prop.setOrder(prop.order.id)}>{prop.order.name}</div>)\n    }\n\n    let orderList: ReactElement[] = [];\n    let count = 0;\n    for (let order of orderConst.orderList) {\n        let orderElement = Order({ order: order, setOrder: prop.setOrder, key: count });\n        if (orderElement !== null) {\n            orderList.push(orderElement);\n        }\n        count++;\n    }\n\n    return (<div className='orderList'>{orderList}</div>);\n}\n\nexport default OrderList;","import { ReactElement } from \"react\";\n\ninterface WhereTitle extends ReactElement { }\n\ntype prop = {\n    setWhereTitle: (title: string) => void\n}\n\nconst WhereTitle: React.FC<prop> = (prop) => {\n    return (\n        <div className='whereTitle'>\n            <input type='search' className='input' onChange={(e) => prop.setWhereTitle(e.target.value)} />\n        </div>\n    )\n}\n\n\n\nexport default WhereTitle;","import { ReactElement, useState } from \"react\";\nimport Categories from './Categories';\nimport OrderList from './OrderList';\nimport WhereTitle from \"./WhereTitle\";\n\nimport * as categoryConst from '../const/category';\nimport * as orderConst from '../const/order';\n\nimport  searchConditions  from \"../type/searchQuizesConditions\";\n\ninterface SearchConditions extends ReactElement { }\n\ntype prop = {\n    conditions: searchConditions\n    setConditions: (title: searchConditions) => void\n}\n\nconst SearchConditions: React.FC<prop> = (prop: prop) => {\n    const [category, setCategory] = useState<categoryConst.categoryId>(categoryConst.categoryId.all);\n    const [order, setOrder] = useState<orderConst.orderId>(orderConst.orderId.newOrder);\n    const [wheretitle, setWhereTitle] = useState<string>('');\n\n    return (\n        <div className='SearchConditions'>\n            \n            <Categories setCategory={setCategory} />\n            <OrderList setOrder={setOrder} />\n            <WhereTitle setWhereTitle={setWhereTitle} />\n            {/* //TODO:should add tags */}\n            <button onClick={() =>\n                prop.setConditions({ ...prop.conditions, category: category, order: order, title: wheretitle })}>\n            絞り込み\n            </button>\n        </div>\n    )\n}\n\n\nexport default SearchConditions;","import { ReactElement, useEffect, useState } from \"react\";\nimport searchConditions from \"../type/searchQuizesConditions\";\nimport fetchQuizParam from \"../type/fetchQuizParam\";\nimport useIndex from \"../hooks/useIndex\";\nimport useFetchQuizes from \"../hooks/useFetchQuizes\";\nimport Pager from \"./Pager\";\nimport Index from \"./Index\";\nimport * as categoryConst from '../const/category';\nimport * as orderConst from '../const/order';\nimport SearchConditions from \"./SearchConditions\";\n\n\nconst displayNum = 10;\n\nconst QuizIndex: () => ReactElement = () => {\n    const [quizes, setFetchQuiz] = useFetchQuizes();\n    const [page, setPage] = useState<number>(1);\n    const [index, setIndex] = useIndex(displayNum);\n\n    let initialSearchConditions: searchConditions = {\n        category: categoryConst.categoryId.all,\n        title: '',\n        order: orderConst.orderId.newOrder\n    }\n    const [searchConditions, setSearchConditions] = useState<searchConditions>(initialSearchConditions);\n\n    let initialFetchParan: fetchQuizParam = {\n        lastQuiz: null,\n        searchConditions: searchConditions\n    };\n    const [fetchParam, setFetchParam] = useState<fetchQuizParam>(initialFetchParan);\n\n    const changeOnPage = () => {\n        setIndex(quizes, page);\n        if (quizes.length !== 0 && quizes.length - page * displayNum <= displayNum) {\n            setFetchQuiz({ ...fetchParam, lastQuiz: quizes[quizes.length - 1] });\n        }\n    }\n\n    useEffect(() => setIndex(quizes, page), [quizes]);\n    useEffect(() => setFetchQuiz({ ...fetchParam, searchConditions: searchConditions, lastQuiz: null }), [searchConditions]);\n    useEffect(changeOnPage, [page]);\n\n\n\n    return (\n        <div>\n            <SearchConditions conditions={searchConditions} setConditions={setSearchConditions} />\n            <Index display={index} />\n            <Pager page={page} setPage={setPage} maxFlg={quizes.length < displayNum * page} />\n        </div>\n    )\n}\n\nexport default QuizIndex;","import { useEffect, useState } from 'react';\nimport { useChangeChoice } from '../../hooks/useChangeQuizContext';\n\n\ntype prop = {\n    questionIndex: number;\n    choiceIndex: number;\n}\n\nconst CreateChoiceField: React.FC<prop> = (prop: prop) => {\n    const [content, setContent] = useState(\"\");\n    const changeChoice = useChangeChoice(prop.questionIndex);\n\n    useEffect(() => {\n        changeChoice(content , prop.choiceIndex);        \n    }, [content])\n\n\n    return (\n        <div className='createChoiceField'>\n            <input type=\"text\" placeholder=\"選択肢を入力してください\" onChange={(e) => setContent(e.target.value)} />\n        </div>\n    )\n}\n\nexport default CreateChoiceField;","import { useContext, useRef } from 'react'\nimport { QuizInfoContext } from '../component/createQuiz/CreateQuizForm'\nimport { createChoiceParam, createQuestionParam } from '../type/createQuizParam'\n\nexport const useAddQuestion = () => {\n    const [quiz, setQuiz] = useContext(QuizInfoContext);\n    const questionArrayRef = useRef<createQuestionParam[]>([]);\n    questionArrayRef.current = quiz.questions;\n\n    return (question: createQuestionParam) => {\n        if (quiz.questions.find(q => q.indexId === question.indexId) !== undefined)\n            throw new Error('this argument index already exists:index'+question.indexId)\n        questionArrayRef.current.push(question);\n        setQuiz({ ...quiz, questions: questionArrayRef.current });\n    }\n}\n\nexport const useChangeQuestion = () => {\n    const [quiz, setQuiz] = useContext(QuizInfoContext);\n    const questionArrayRef = useRef<createQuestionParam[]>([]);\n    questionArrayRef.current = quiz.questions;\n\n    return (newContent: string, newComment: string, index: number) => {\n        if (questionArrayRef.current.find(q => q.indexId === index) === undefined)\n            throw new Error('this argument index is not exists:index'+index);\n        setQuiz({\n            ...quiz, questions: questionArrayRef.current.map(q => {\n                if (q.indexId === index) {\n                    return { ...q, content: newContent, comment: newComment };\n                } else {\n                    return q;\n                }\n            })\n        })\n    }\n}\n\nexport const useDeleteQuestion = () => {\n    const [quiz, setQuiz] = useContext(QuizInfoContext);\n    const questionArrayRef = useRef<createQuestionParam[]>([]);\n    questionArrayRef.current = quiz.questions;\n\n    return (index: number) => {\n        if (questionArrayRef.current.find(q => q.indexId === index) === undefined)\n            throw new Error('this argument index is not exists:index'+index);\n        setQuiz({\n            ...quiz, questions: questionArrayRef.current.filter(q => q.indexId !== index)\n        });\n    }\n}\n\nexport const useAddChoice = (quesitonIndex: number) => {\n    const [quiz, setQuiz] = useContext(QuizInfoContext);\n    const questionArrayRef = useRef<createQuestionParam[]>([]);\n    questionArrayRef.current = quiz.questions;\n    const ownerQuestion = questionArrayRef.current.find(q => q.indexId === quesitonIndex);\n\n    if (ownerQuestion === undefined)\n        throw new Error('this question is not exists:index'+quesitonIndex);\n\n    return (choice: createChoiceParam) => {\n        if (ownerQuestion.choices.find(c => c.indexId == choice.indexId) !== undefined)\n            throw new Error('this choice is already exists:index'+choice.indexId);\n        ownerQuestion.choices.push(choice);\n        setQuiz({\n            ...quiz, questions:\n                questionArrayRef.current.map(q => {\n                    if (q.indexId === quesitonIndex) {\n                        return ownerQuestion;\n                    } else {\n                        return q;\n                    }\n                })\n        })\n    }\n}\n\nexport const useChangeChoice = (quesitonIndex: number) => {\n    const [quiz, setQuiz] = useContext(QuizInfoContext);\n    const questionArrayRef = useRef<createQuestionParam[]>([]);\n\n    questionArrayRef.current = quiz.questions;\n    const ownerQuestion = questionArrayRef.current.find(q => q.indexId === quesitonIndex);\n\n    if (ownerQuestion === undefined)\n        throw new Error('this question is not exists:index'+quesitonIndex);\n\n    return (newContent: string, index: number) => {\n        if (ownerQuestion.choices.find(q => q.indexId === index) === undefined)\n            throw new Error('this argument index is not exists:index'+index);\n        setQuiz({\n            ...quiz, questions:\n                questionArrayRef.current.map(q => {\n                    if (q.indexId === quesitonIndex) {\n                        return {\n                            ...ownerQuestion, choices: ownerQuestion.choices.map(c => {\n                                if (c.indexId === index) {\n                                    return { ...c, content: newContent }\n                                } else {\n                                    return c;\n                                }\n                            })\n                        };\n                    } else {\n                        return q;\n                    }\n                })\n        })\n    }\n}\n\nexport const useDeleteChoice = (quesitonIndex: number) => {\n    const [quiz, setQuiz] = useContext(QuizInfoContext);\n    const questionArrayRef = useRef<createQuestionParam[]>([]);\n\n    questionArrayRef.current = quiz.questions;\n    const ownerQuestion = questionArrayRef.current.find(q => q.indexId === quesitonIndex);\n\n    if (ownerQuestion === undefined)\n        throw new Error('this question is not exists:index'+quesitonIndex)\n\n    return (index: number) => {\n        if (ownerQuestion.choices.find(c => c.indexId === index) === undefined)\n            throw new Error('this argument index is not exists:index'+ index);\n        setQuiz({\n            ...quiz, questions:\n                questionArrayRef.current.map(q => {\n                    if (q.indexId === quesitonIndex) {\n                        return {\n                            ...ownerQuestion, choices: ownerQuestion.choices.filter(c => c.indexId !== index)\n                        };\n                    } else {\n                        return q;\n                    }\n                })\n        })\n    }\n}\n\nexport const useChangeCorrectChoice = (quesitonIndex: number) => {\n    const [quiz, setQuiz] = useContext(QuizInfoContext);\n    const questionArrayRef = useRef<createQuestionParam[]>([]);\n\n    questionArrayRef.current = quiz.questions;\n    const ownerQuestion = questionArrayRef.current.find(q => q.indexId === quesitonIndex);\n\n    if (ownerQuestion === undefined)\n        throw new Error('this question is not exists:index'+quesitonIndex)\n\n    return (index: number) => {\n        let targetChoices = ownerQuestion.choices;\n        targetChoices = targetChoices.map(c => {\n            if (c.indexId === index) {\n                return { ...c, correctFlg: true }\n            } else if (c.indexId !== index && c.correctFlg === true) {\n                return { ...c, correctFlg: false }\n            } else {\n                return c;\n            }\n        }\n        )\n        setQuiz({\n            ...quiz, questions:\n                questionArrayRef.current.map(q => {\n                    if (q.indexId === quesitonIndex) {\n                        return {\n                            ...ownerQuestion, choices: targetChoices\n                        };\n                    } else {\n                        return q;\n                    }\n                })\n        });\n    }\n\n}","import { ReactElement, useEffect, useRef, useState } from \"react\";\nimport CreateChoiceField from \"./CreateChoiceField\";\nimport { useAddChoice, useChangeCorrectChoice, useDeleteChoice } from \"../../hooks/useChangeQuizContext\"\n\ntype prop = {\n    quesitonIndex: number\n}\n\nconst CreateChoiceForm: React.FC<prop> = (prop: prop) => {\n    const [nextIndex, setNextIndex] = useState<number>(2);\n    const [addChoicesZone, setAddChoicesZone] = useState<ReactElement[]>([]);\n\n    const changeCorrect = useChangeCorrectChoice(prop.quesitonIndex); \n\n    const addChoiceToContext = useAddChoice(prop.quesitonIndex);\n    const deleteChoise = useDeleteChoice(prop.quesitonIndex);\n\n    let addChoicesZoneRef = useRef<ReactElement[]>([]);\n    addChoicesZoneRef.current = addChoicesZone;\n\n    useEffect(() => {\n        addChoice(0);\n        addChoice(1);\n    }, [])\n\n    const addChoice = (nextIndex:number) => {\n        const deleteThis = (index: number) => {\n            //use '!=' because reactElement.key's type is string\n            setAddChoicesZone(addChoicesZoneRef.current.filter(element => element.key != index));\n            deleteChoise(index);\n        }\n\n\n        addChoiceToContext({ indexId: nextIndex, content: '', correctFlg: false });\n\n        //this function is change style correct \n        const changeCheckValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n            changeCorrect(nextIndex);           \n\n            const beforeCorrects= document.querySelectorAll(\".correct\");\n            beforeCorrects.forEach(e => e.className= \"\");\n\n            if (e.target.parentElement === null)\n                throw new Error('choice zone is invalid,it need parent element');\n            e.target.parentElement.className = \"correct\"\n\n        }\n\n        addChoicesZoneRef.current.push(\n            <div key={nextIndex} >\n                <CreateChoiceField questionIndex={prop.quesitonIndex} choiceIndex={nextIndex} />\n                <input id={`${nextIndex}`} value={nextIndex} name=\"correctCheck\" onChange={e => changeCheckValue(e)} type=\"radio\" />\n                <div className=\"delete\" onClick={() => deleteThis(nextIndex)}>この選択肢を削除</div>\n            </div>\n        );\n        setAddChoicesZone([...addChoicesZoneRef.current])\n    }\n\n    return (\n        <div className='createChoiceForm'>\n            {addChoicesZone}\n            <div onClick={() => {\n                addChoice(nextIndex);\n                setNextIndex(nextIndex+1);\n            }}>選択肢を追加</div>\n        </div>\n    )\n}\n\nexport default CreateChoiceForm;","import { useContext, useEffect, useState } from \"react\";\nimport { useChangeQuestion } from \"../../hooks/useChangeQuizContext\";\nimport CreateChoiceForm from \"./CreateChoiceForm\";\nimport { QuizInfoContext } from \"./CreateQuizForm\"\n\ntype prop = {\n    index: number;\n}\n\nconst CreateQuestionField: React.FC<prop> = (prop: prop) => {\n    const [content, setContent] = useState<string>(\"\");\n    const [comment, setComment] = useState<string>(\"\");\n\n    const  changeQuestion = useChangeQuestion();\n\n    useEffect(() => {\n        changeQuestion(content,comment,prop.index);\n\n    }, [content, comment])\n\n    return (\n        <div className='CreateQuestionField'>\n            <input type=\"textarea\" placeholder=\"問題文を入力してください\" onChange={(e) => setContent(e.target.value)} />\n            <CreateChoiceForm quesitonIndex={prop.index} />\n            <input type=\"text\" placeholder=\"回答後に表示されるコメントを入力してください\" onChange={(e) => setComment(e.target.value)} />\n        </div>\n    )\n}\n\nexport default CreateQuestionField;","import { ReactElement, useEffect, useRef, useState } from \"react\";\nimport CreateQuestionField from \"./CreateQuestionField\";\nimport { useAddQuestion, useDeleteQuestion } from \"../../hooks/useChangeQuizContext\";\n\n\ntype prop = {\n\n}\n\nconst CreateQuestionForm: React.FC<prop> = (prop: prop) => {\n    const [nextIndex, setNextIndex] = useState<number>(1);\n    const [addQuestionsZone, setAddQuestionsZone] = useState<ReactElement[]>([]);\n\n    const deleteQuestion = useDeleteQuestion();\n    const addQuestionToContext = useAddQuestion();\n\n    //useRef to delete\n    let addQuestionsZoneRef = useRef<ReactElement[]>([]);\n    addQuestionsZoneRef.current = addQuestionsZone;\n\n\n    useEffect(() => {\n        addQuestion(0);\n    }, [])\n\n    const addQuestion = (nextIndex: number) => {\n        const deleteThis = (index: number) => {\n            //use '!=' because reactElement.key`s type is string\n            setAddQuestionsZone(addQuestionsZoneRef.current.filter(element => element.key != index));\n            deleteQuestion(index);\n        }\n\n        addQuestionToContext({ indexId: nextIndex, content: \"\", comment: \"\", choices: [] });\n\n        addQuestionsZone.push(\n            <div key={nextIndex}>\n                <CreateQuestionField index={nextIndex} />\n                <div className=\"delete\" onClick={() => deleteThis(nextIndex)}>削除</div>\n            </div>\n        )\n        setAddQuestionsZone([...addQuestionsZone]);\n\n    }\n\n    return (\n        <div className='createQuestionForm'>\n            {addQuestionsZone}\n            <div onClick={() => {\n                addQuestion(nextIndex);\n                setNextIndex(nextIndex + 1);\n            }}>問題を追加</div>\n        </div>\n    )\n}\n\nexport default CreateQuestionForm;","import React, { ReactElement, useContext, useState } from \"react\";\nimport createQuizParam, { createChoiceParam, createQuestionParam } from \"../../type/createQuizParam\";\nimport Categories from \"../Categories\";\nimport * as categoryConst from '../../const/category'\nimport CreateQuestionForm from \"./CreateQuestionForm\";\nimport history from 'history/createBrowserHistory';\nimport axios from \"axios\";\n\ntype quizInfonContext = [\n    quiz: createQuizParam,\n    setQuiz: React.Dispatch<React.SetStateAction<createQuizParam>>\n]\n\n//QuizInfo is managed by context\nexport const QuizInfoContext = React.createContext<quizInfonContext>({} as quizInfonContext);\n\nconst CREATE_QUIZ_URL =\"/quizWeb/quiz/create\";\n\nconst CreateQuizForm: React.FC = () => {\n\n    const [category, setCategory] = useState<categoryConst.categoryId>(categoryConst.categoryId.all);\n    const [title, setTitle] = useState<string>('');\n    const [description, setDescription] = useState<string>('');\n\n\n\n    const [quiz, setQuiz] = useState<createQuizParam>({\n        category: category,\n        description: description,\n        title: title,\n        questions: []\n    })\n\nconst submit = () =>{\n    axios.post(CREATE_QUIZ_URL,{createQuizParam:quiz}).then(res => history().push('/'));\n}\n\n    return (\n        <div className='CreateQuizForm'>\n            <QuizInfoContext.Provider value={[quiz, setQuiz]}>\n                <Categories setCategory={setCategory} />\n                <div className='title'>\n                    <input type='text' className='input' placeholder='クイズのタイトルを入力してください' onChange={(e) => setTitle(e.target.value)} />\n                </div>\n                <div className='description'>\n                    <input type='text' className='input' onChange={(e) => setDescription(e.target.value)} />\n                </div>\n                <CreateQuestionForm />\n            </QuizInfoContext.Provider>\n            <button className=\"submit\" onClick={e => {\n                (e.target as HTMLButtonElement).disabled=true;\n                submit();\n                }}></button>\n        </div>\n    )\n}\n\nexport default CreateQuizForm;","import './App.css';\r\nimport QuizScreen from './component/QuizScreen';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport QuizIndex from './component/QuizIndex';\r\nimport CreateQuizForm from './component/createQuiz/CreateQuizForm';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename='/quizWeb/react'>\r\n      <Switch>\r\n        <Route exact path='/'>\r\n          <QuizIndex />\r\n          <Link to={'/create'} >\r\n            問題作成\r\n          </Link>\r\n        </Route>\r\n        <Route exact path='/game/:id' >\r\n          <QuizScreen />\r\n        </Route>\r\n        <Route exact path='/create' >\r\n          <CreateQuizForm />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}